@model EtreetrainingUser.Models.Trainer

@{
    ViewBag.Title = "EOTA :: Trainer's registration";
    Layout = "~/Views/Shared/_AdminMaster.cshtml";
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Trnr_reg</title>
</head>
<body>
    <div id="page-wrapper">
        <div class="main-page">
            <!--grids-->
            <div class="grids">
                <div class="progressbar-heading grids-heading">
                    <h2>Trainer Registration</h2>
                </div>
                <div class="panel panel-widget">
                    <div class="block-page">

                        <p>

                            @using (Html.BeginForm("Trnr_reg", "Trainers", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return validateForm2(event)" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">
                                    @if (@ViewBag.sccess == "1")
                                    {
                                        <h4 style="color:green">

                                            @ViewBag.Message
                                        </h4>
                                    }
                                    else
                                    {
                                        <h4 style="color:red"> @ViewBag.Message</h4>
                                    }

                                    <br />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" , style = "width:40%" } })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Email_Id, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Email_Id, new
                                       {
                                           htmlAttributes = new
                                           {@class = "form-control",
                                               id = "email2",
                                               style = "width:40%"
                                           }
                                       })
                                            @Html.ValidationMessageFor(model => model.Email_Id, "", new { @class = "text-danger" })
                                            <h4 id="emailerror2" class="text-danger text-left"></h4>
                                            <script language="Javascript">
                                                function validateForm2(event) {
                                                    var pattern2 = /^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/;

                                                    var userName2 = document.getElementById("email2").value;

                                                    if (userName2.match(pattern2)) {

                                                        return true;
                                                    } else {

                                                        document.getElementById("emailerror2").innerHTML = "Email is not valid";

                                                        return false;
                                                    }

                                                }

                                            </script>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control",style = "width:40%", onkeypress = "return isNumberKey(event)" } })
                                            @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                                            <script type="text/javascript">
                                                function isNumberKey(evt) {
                                                    var charCode = (evt.which) ? evt.which : event.keyCode;
                                                    if (charCode > 31
                                                        && (charCode < 48 || charCode > 57))
                                                        return false;

                                                    return true;
                                                }
                                            </script>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Photo_Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Photo_Title, new { htmlAttributes = new { @class = "form-control", style = "width:40%" } })
                                            @Html.ValidationMessageFor(model => model.Photo_Title, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Photo_Path, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.image, "", new { @type = "file", @multiple = "multiple", name = "image",required="required" })
                                            @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "pss", style = "width:40%" } })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Re_Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Re_Password, new { htmlAttributes = new { @class = "form-control", id = "repss", style = "width:40%" } })
                                            @Html.ValidationMessageFor(model => model.Re_Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Create" class="btn btn-default" />
                                        </div>
                                    </div>
                                </div>
                            }

                            <div>
                                @Html.ActionLink("Back to Login Page?", "Trainrs_Login")
                            </div>

                            <script>
                                $("#pss").val("");
                                $("#repss").val("");
                            </script>

                        </p>
                    </div>
                </div>
            </div>
            <!--//grids-->

        </div>
    </div>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
</body>
</html>